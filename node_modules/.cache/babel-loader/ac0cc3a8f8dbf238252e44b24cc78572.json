{"ast":null,"code":"var _jsxFileName = \"/Users/christopher/Desktop/Thinkful/Projects/React/Pomodoro/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/sessions.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProgressBar from \"./progressBar\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Sessions({\n  session,\n  isPaused\n}) {\n  if (session === null) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, `${session.label} for ${session.duration} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, `${secondsToDuration(session.timeRemaining)} remaining`), isPaused && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }\n  }, \"PAUSED\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    percentComplete: session.percentComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }))));\n}\n\nSessions.propTypes = {\n  session: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    duration: PropTypes.string.isRequired,\n    timeRemaining: PropTypes.number.isRequired,\n    percentComplete: PropTypes.number.isRequired\n  }),\n  isPaused: PropTypes.bool.isRequired\n};\nexport default Sessions;","map":{"version":3,"sources":["/Users/christopher/Desktop/Thinkful/Projects/React/Pomodoro/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/sessions.js"],"names":["React","PropTypes","ProgressBar","secondsToDuration","Sessions","session","isPaused","label","duration","timeRemaining","percentComplete","propTypes","shape","string","isRequired","number","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAlB,EAAyC;AACvC,MAAID,OAAO,KAAK,IAAhB,EAAsB,OAAO,IAAP;AACtB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,GAAEA,OAAO,CAACE,KAAM,QAAOF,OAAO,CAACG,QAAS,UAF5C,CAFF,eAOE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,GAAEL,iBAAiB,CAACE,OAAO,CAACI,aAAT,CAAwB,YAF/C,CAPF,EAWGH,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXf,CADF,CAFF,eAiBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,eAAe,EAAED,OAAO,CAACK,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAjBF,CADF;AAyBD;;AACDN,QAAQ,CAACO,SAAT,GAAqB;AACnBN,EAAAA,OAAO,EAAEJ,SAAS,CAACW,KAAV,CAAgB;AACvBL,IAAAA,KAAK,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UADD;AAEvBN,IAAAA,QAAQ,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAFJ;AAGvBL,IAAAA,aAAa,EAAER,SAAS,CAACc,MAAV,CAAiBD,UAHT;AAIvBJ,IAAAA,eAAe,EAAET,SAAS,CAACc,MAAV,CAAiBD;AAJX,GAAhB,CADU;AAOnBR,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeF;AAPN,CAArB;AASA,eAAeV,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProgressBar from \"./progressBar\";\nimport { secondsToDuration } from \"../utils/duration\";\n\nfunction Sessions({ session, isPaused }) {\n  if (session === null) return null;\n  return (\n    <div>\n      {/* TODO: This area should show only when a focus or break session is running or pauses */}\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n          <h2 data-testid=\"session-title\">\n            {/* Focusing for 25:00 minutes */}\n            {`${session.label} for ${session.duration} minutes`}\n          </h2>\n          {/* TODO: Update message below to include time remaining in the current session */}\n          <p className=\"lead\" data-testid=\"session-sub-title\">\n            {/* 25:00 remaining */}\n            {`${secondsToDuration(session.timeRemaining)} remaining`}\n          </p>\n          {isPaused && <h3>PAUSED</h3>}\n        </div>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col\">\n          <ProgressBar percentComplete={session.percentComplete} />\n        </div>\n      </div>\n    </div>\n  );\n}\nSessions.propTypes = {\n  session: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    duration: PropTypes.string.isRequired,\n    timeRemaining: PropTypes.number.isRequired,\n    percentComplete: PropTypes.number.isRequired,\n  }),\n  isPaused: PropTypes.bool.isRequired,\n};\nexport default Sessions;\n"]},"metadata":{},"sourceType":"module"}